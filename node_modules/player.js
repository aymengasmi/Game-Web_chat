function Player(id) 
{ 
	this.id=id;
	this.title;
	this.color;
	this.posX;
	this.posY;
	this.lastposX;
	this.lastposY;
	this.length=20;
	this.form="Circl";
	this.life=100;
	this.speedX=0;
	this.speedY=0;
	this.hitbox=null;
	this.alive=true;

	if( typeof Player.initialized == "undefined" ) 
	{ 
		Player.prototype.initialize=function(title,color,width,height)
		{
			this.title=title;
			this.color=color;
			
			if(this.id == 0)
			{
				this.posX=20+this.length;
				this.posY=20+this.length;
			}

			if(this.id == 1)
			{
				this.posX=width - (20+this.length);
				this.posY=20+this.length;
			}

			if(this.id == 2)
			{
				this.posX=(20+this.length);
				this.posY=height-(20+this.length);
			}

			if(this.id == 3)
			{
				this.posX=width-(20+this.length);
				this.posY=height-(20+this.length);
			}
			
			this.lastposX=this.posX;
			this.lastposY=this.posY;
		}

		Player.prototype.upVx = function() {this.speedX=this.speedX+1;}
		Player.prototype.upVy = function() {this.speedY=this.speedY+1;} 
		
		Player.prototype.downVx = function() {this.speedX=this.speedX-1;} 
		Player.prototype.downVy = function() {this.speedY=this.speedY-1;}
		
		Player.prototype.calculatePosition = function()
		{
			this.lastposX=this.posX;
			this.lastposY=this.posY;

			this.posX=this.posX+this.speedX;
			this.posY=this.posY+this.speedY;
		}

		Player.prototype.calculateHitBox = function()
		{
			this.hitbox= new HitBox(this.form,this.posX,this.posY,this.length);
		}
		
		Player.prototype.becameSmaller = function()
		{
			if(!(this.length == 10))
			{
				this.length = 10;
				this.life = this.life - 5;
			}
		}

		Player.prototype.restLength = function()
		{
			this.length = 20;
		}

		
		Player.prototype.isAlive = function()
		{
			return this.alive;
		}

		Player.prototype.becameRect = function()
		{
			if(!(this.form == "Rect"))
			{
				this.form="Rect";
				this.life = this.life - 5;
			}
		}

		Player.prototype.becameCircl = function()
		{
			if(!(this.form == "Circl"))
			{
				this.form="Circl";
				this.life = this.life - 5;
			}
		}
		
		Player.prototype.stop = function()
		{
			if(!(this.speedX == 0 && this.speedY == 0))
			{
				this.speedX=0;
				this.speedY=0;
				this.life = this.life - 5;
			}
		}

		Player.prototype.dead = function()
		{
			this.alive=false;
			this.life=0;
			this.speedX=0;
			this.speedY=0;
		}

		Player.initialized = true; 
	} 
}


function HitBox(form,centerX,centerY,length) 
{ 
	this.centerX=centerX;
	this.centerY=centerY;
	this.length=length;
	this.form=form;

	if( typeof HitBox.initialized == "undefined" ) 
	{

		HitBox.prototype.collapse=function(hitbox)
		{
			if(hitbox.form == "Rect")
				return hitbox.collapseWithRect(this.centerX,this.centerY,this.length); 

			if(hitbox.form == "Circl")
				return hitbox.collapseWithCircl(this.centerX,this.centerY,this.length); 
		}

		HitBox.prototype.collapseWithRect = function(centerX,centerY,length)
		{
			if(this.centerX >= centerX && this.centerX-centerX >=length+this.length)
				return false;

			if(this.centerX < centerX && centerX-this.centerX >=length+this.length)
				return false;

			if(this.centerY >= centerY && this.centerY-centerY >=length+this.length)
				return false;

			if(this.centerY < centerY && centerY-this.centerY >=length+this.length)
				return false;

			return true;
		}

		HitBox.prototype.collapseWithCircl = function(centerX,centerY,length)
		{
			if(this.form=="Rect")
			{
				if(this.centerX >= centerX && this.centerX-centerX >=length+this.length)
					return false;

				if(this.centerX < centerX && centerX-this.centerX >=length+this.length)
					return false;

				if(this.centerY >= centerY && this.centerY-centerY >=length+this.length)
					return false;

				if(this.centerY < centerY && centerY-this.centerY >=length+this.length)
					return false;

				return true;
			}
			
			if(this.form=="Circl")
			{
				var X = (centerX > this.centerX)?centerX-this.centerX:this.centerX-centerX;
				var Y = (centerY > this.centerY)?centerY-this.centerY:this.centerY-centerY;

				var distanceCarre=(X*X)+(Y*Y)
				var distanceLimit=length+this.length;
				
				if(distanceCarre >= (distanceLimit*distanceLimit))
					return false;

				return true;
			}
		}

		HitBox.intialized=true;
	} 

}

module.exports = Player;


